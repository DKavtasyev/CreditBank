name: CI Workflow

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  Init:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: setup JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies
        run: mvn install -DskipTests

      - name: Run tests
        run: mvn test

      - name: Code Coverage Report
        run: mvn jacoco:report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.5.0
        with:
          files: ./target/site/jacoco/jacoco.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.11.0
        with:
          jacoco-csv-file: target/site/jacoco/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.output.branches }}"
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        if: github.event_name == 'pull_request'
        with:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          recreate: true
          message: "# Hello world! \n coverage = ${{ steps.jacoco.outputs.coverage }}"

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4.3.6
        with:
          name: jacoco-report
          path: target/site/jacoco/

#      - name: Analyze with SonarCloud
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: |
#          mvn verify sonar:sonar \
#          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
#          -Dsonar.organization=${{ secrets.SONAR_ORG }} \
#          -Dsonar.host.url=https://sonarcloud.io